version: "3"

services:
  frontend:
    build:
      context: .
      dockerfile: docker/nodejs/Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/src # ローカルをコンテナ内にマウント
    command: sh -c "cd react-project && npm start" #コンテナを立ち上げたときに自動的にbuildする
    environment:
      - WATCHPACK_POLLING=true

  backend:
    build:
      context: .
      dockerfile: docker/django/Dockerfile
    depends_on:
      db:
        condition: service_healthy

    environment:
      - DB_HOST=db
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app/
    command: >
      bash -c "
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000"

  nginx:
    image: nginx
    ports:
      - "8080:80"
    volumes:
      - ./frontend/react-project/build:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend

  
  db:
    build: 
      context: .
      dockerfile: docker/mysql/Dockerfile
    ports:
      - 3306:3306
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 3

volumes:
  mysql_data: